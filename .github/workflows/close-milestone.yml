
name: Close Milestone

on:
  pull_request:
    types: [closed]

jobs:
  close-milestone:
    runs-on: ubuntu-latest
    steps:

    - name: Github Information
      id: github-info
      run: |
        echo ::group::Repository:
        echo ${{ github.repository }}
        echo ::endgroup::
        echo ::group::Pull Request:
        echo Name: ${{ github.event.pull_request.title }}
        echo Number: ${{ github.event.pull_request.number }}
        echo ::endgroup::

    - name: Check for Open Milestone
      id: check-for-open-milestone
      run: |
<<<<<<< HEAD
        MILESTONE_DATA=$( echo '${{ github.event.pull_request.milestone }}' )
        MILESTONE_STATE=$( echo $MILESTONE_DATA | jq --raw-output .state )
=======
        MILESTONE_DATA=$( echo '${{ toJSON(github.event.pull_request.milestone) }}' )
        MILESTONE_STATE=$( echo '${{ github.event.pull_request.milestone.state }}' )
>>>>>>> Implementation of Close Milestone action
        echo ::group::Status:
        # If there is no milestone linked to the pull request then a value of "null" is returned from the API
        if [[ $MILESTONE_DATA != "null" && $MILESTONE_STATE == "open" ]];
        then
          echo An open milestone was successfully found
          echo ::set-output name=milestone::$MILESTONE_DATA
        else
          echo There is no open milestone linked to the pull request
        fi
        echo ::endgroup::

    - name: Process Milestone
      id: process-milestone
      if: steps.check-for-open-milestone.outputs.milestone != null
      run: |
        PROCESSED_MILESTONE_DATA=$( echo '${{ steps.check-for-open-milestone.outputs.milestone }}' | jq --raw-output '{ title, number, open_issues, closed_issues, due_on }' )
        OPEN_ISSUES=$( echo $PROCESSED_MILESTONE_DATA | jq --raw-output .open_issues )
        echo ::group::Status:
        # If there are no open issues then the milestone is elegible for closure
        if [[ $OPEN_ISSUES == 0 ]];
        then
          echo Milestone can successfully be closed
          echo ::set-output name=milestone::$PROCESSED_MILESTONE_DATA
        else
          # Only for the purpose of making the message grammatically correct when read
          if [[ $OPEN_ISSUES == 1 ]];
          then
            OPEN_ISSUES_TEXT=$( echo open issue )
          else
            OPEN_ISSUES_TEXT=$( echo open issues )
          fi
          echo Milestone still has $OPEN_ISSUES $OPEN_ISSUES_TEXT linked to it and therefore cannot be closed yet
        fi
        echo ::endgroup::

    - name: Close Milestone
      id: close-milestone
      if: steps.process-milestone.outputs.milestone != null
      run: |
        MILESTONE_DATA=$( echo '${{ steps.process-milestone.outputs.milestone }}' )
        NUMBER=$( echo $MILESTONE_DATA | jq --raw-output '.number' )
        TITLE=$( echo $MILESTONE_DATA | jq --raw-output '.title' )
        CLOSED_ISSUES=$( echo $MILESTONE_DATA | jq --raw-output '.closed_issues' )
        DUE_ON=$( echo $MILESTONE_DATA | jq --raw-output '.due_on' )
        # Need to authenticate to obtain write access for the REST API PATCH event
        CLOSED_MILESTONE=$( curl --silent -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/milestones/$NUMBER -d '{ "state":"closed" }' )
        echo ::group::Closed Milestone:
        echo Title: $TITLE
        echo Number: $NUMBER
        echo Closed Issues: $CLOSED_ISSUES
        echo Due On: $DUE_ON
        echo ::endgroup::
